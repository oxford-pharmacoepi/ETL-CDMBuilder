providerId = sequencer$nextSequence();
return (list(staffid = providerId, provider_id = providerId));
}
createProvider()
createProvider(providerId='A34')
?initFramework
patient <- createPatient();
library(CPRDtesting)
patient <- createPatient();
patinet
patniet
patient
caresite <- createCareSite(claimId=3);
caresite
library(CPRDtesting)
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
source_schema <- "Native.Cdm_testing_cprd"
cdm_schema <- "Testing.Cdm_testing_cprd"
cdmDatabaseSchema = strsplit(source_schema, '[.]')[[1]][1]
pw <- "~5H8Ey~vr1K3"
dbms <- "sql server"
user <- "epi_rds_write"
server <- "rds-epidev.c9noqp7vjybh.us-east-1.rds.amazonaws.com;Database=Native"
port <- NULL
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = dbms,
server = server,
user = user,
password = pw,
port = port
#,extraSettings = "ssl=true&sslfactory=com.amazon.redshift.ssl.NonValidatingFactory"
)
connection <- DatabaseConnector::connect(connectionDetails)
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste(getInsertSql(connectionDetails), sep = "", collapse = "\n"),
source_schema = source_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::renderSql(paste(getInsertSql(connectionDetails),
sep = "", collapse = "\n"),
source_schema = source_schema)$sql
getInsertSql(connectionDetails)
SqlRender::renderSql(paste(getInsertSql(connectionDetails),
sep = "", collapse = "\n")
)
paste(getInsertSql(connectionDetails),
+                            sep = "", collapse = "\n")
paste(getInsertSql(connectionDetails), sep = "", collapse = "\n")
SqlRender::renderSql(paste(getInsertSql(connectionDetails),
sep = "", collapse = "\n"),
source_schema = source_schema)
SqlRender::renderSql(paste(getInsertSql(connectionDetails),
sep = "", collapse = "\n"),
source_schema = source_schema, class='t')
sql <- paste(getInsertSql(connectionDetails),
sep = "", collapse = "\n")
grep('class',sql)
class(sql)
SqlRender::renderSql(sql, source_schema = source_schema)$sql
debug(SqlRender::renderSql)
SqlRender::renderSql(sql, source_schema = source_schema)$sql
SqlRender::renderSql(sql, source_schema = source_schema)$sql
parameters
names(parameters)
as.character(parameters)
sql
getwd()
write.table(sql, 'sql.txt')
rJava::J("org.ohdsi.sql.SqlRender")$check
rJava::J("org.ohdsi.sql.SqlRender")$check()
rJava::J("org.ohdsi.sql.SqlRender")
library('rJava')
rJava::J("org.ohdsi.sql.SqlRender")
sql <- gsub('@source_schema','', SqlRender::renderSql(paste(getInsertSql(connectionDetails),
sep = "", collapse = "\n"))
source_schema
sql <-gsub('@source_schema','Native.Cdm_testing_cprd', paste(getInsertSql(connectionDetails),
sep = "", collapse = "\n"))
sql
insertSql <- SqlRender::translateSql(sql,
targetDialect = connectionDetails$dbms)$sql
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
source_schema
DatabaseConnector::querySql(connection, 'select * from Native.Cdm_testing_cprd.entity')
table(DatabaseConnector::querySql(connection, 'select * from Native.Cdm_testing_cprd.entity')$CODE)
res <- DatabaseConnector::querySql(connection, 'select * from Native.Cdm_testing_cprd.entity')
res[res$CODE==372,]
res <- DatabaseConnector::querySql(connection, 'select * from Native.Cdm_testing_cprd.loopup')
res <- DatabaseConnector::querySql(connection, 'select * from Native.Cdm_testing_cprd.lookup')
table(res$LOOKUP_ID)
res[res$LOOKUP_ID==609,]
res <- DatabaseConnector::querySql(connection, 'select * from Native.Cdm_testing_cprd.lookup_type')
res <- DatabaseConnector::querySql(connection, 'select * from Native.Cdm_testing_cprd.lookuptype')
table(res$LOOKUP_TYPE_ID)
table(res$LOOKUP_TYPE_ID, res$NAME)
library(CPRDtesting)
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
connection <- DatabaseConnector::connect(connectionDetails)
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', getTestSql(connectionDetails)), sep = "", collapse = "\n"),
cdm_schema = cdm_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(testSql, 'testSql.sql')
DatabaseConnector::executeSql(connection, testSql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT status, count(*) FROM @cdm_schema.test_results group by status", cdm_schema = cdm_schema)$sql)
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
View(fails)
cdm_schema
DatabaseConnector::querySql(conneciton, 'select * from Testing.Cdm_testing_cprd.person where person_id=45111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.person where person_id=45111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.measurement where person_id=45111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.observation where person_id=45111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.observation where person_id=48111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.measurement where person_id=48111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.measurement where person_id=49111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.measurement where person_id=50111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.measurement where person_id=51111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.measurement where person_id=59111')
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.observation where person_id=59111')
59111*10000000+2012*10000+1*100+1
59111*100000000+2012*10000+1*100+1
DatabaseConnector::querySql(connection, 'select * from Testing.Cdm_testing_cprd.observation where person_id=76111')
patient <- createPatient();
patient$person_id
as.double(patient$person_id)
library(CPRDtesting)
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
connection <- DatabaseConnector::connect(connectionDetails)
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', getTestSql(connectionDetails)), sep = "", collapse = "\n"),
cdm_schema = cdm_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(testSql, 'testSql.sql')
DatabaseConnector::executeSql(connection, testSql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT status, count(*) FROM @cdm_schema.test_results group by status", cdm_schema = cdm_schema)$sql)
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
View(fails)
fails <- DatabaseConnector::querySql(connection, "select * from ... where person_id=11111")
cdm_schema
fails <- DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.drug_era where person_id=11111")
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.drug_era where person_id=11111")
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.drug_eexposure where person_id=11111")
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.drug_exposure where person_id=11111")
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.measurement where person_id=51111")
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.observation where person_id=76111")
library(CPRDtesting)
library(CPRDtesting)
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
connection <- DatabaseConnector::connect(connectionDetails)
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', getTestSql(connectionDetails)), sep = "", collapse = "\n"),
cdm_schema = cdm_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(testSql, 'testSql.sql')
DatabaseConnector::executeSql(connection, testSql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT status, count(*) FROM @cdm_schema.test_results group by status", cdm_schema = cdm_schema)$sql)
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
View(fails)
library(CPRDtesting)
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
connection <- DatabaseConnector::connect(connectionDetails)
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', getTestSql(connectionDetails)), sep = "", collapse = "\n"),
cdm_schema = cdm_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
DatabaseConnector::executeSql(connection, testSql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT status, count(*) FROM @cdm_schema.test_results group by status", cdm_schema = cdm_schema)$sql)
SqlRender::writeSql(testSql, 'testSql.sql')
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
fails
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.observation where person_id=76111")
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.observation where person_id=76111")
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.observation where person_id=76111")
library(CPRDtesting)
connection <- DatabaseConnector::connect(connectionDetails)
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', getTestSql(connectionDetails)), sep = "", collapse = "\n"),
cdm_schema = cdm_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(testSql, 'testSql.sql')
DatabaseConnector::executeSql(connection, testSql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT status, count(*) FROM @cdm_schema.test_results group by status", cdm_schema = cdm_schema)$sql)
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
failsw
fails
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.observation where person_id=76111")
source_schema
DatabaseConnector::querySql(connection, "select * from Native.Cdm_testing_cprd.test where patid=76111")
DatabaseConnector::querySql(connection, "select * from Native.Cdm_testing_cprd.entity where code=412")
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.observation where person_id=76111")
DatabaseConnector::querySql(connection, "select * from Native.Cdm_testing_cprd.medical where medcode=98196")
library(CPRDtesting)
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
source('S:/EpiProjects/CPRDtesting/codeToRun.R')
fails
DatabaseConnector::querySql(connection, "select * from Testing.Cdm_testing_cprd.observation where person_id=76111")
library(CPRDtesting)
connection <- DatabaseConnector::connect(connectionDetails)
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', getTestSql(connectionDetails)), sep = "", collapse = "\n"),
cdm_schema = cdm_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(testSql, 'testSql.sql')
DatabaseConnector::executeSql(connection, testSql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT status, count(*) FROM @cdm_schema.test_results group by status", cdm_schema = cdm_schema)$sql)
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
fails
library(CPRDtesting)
library(CPRDtesting)
library(CPRDtesting)
initFramework()
createCareSite
declareTest(description = 'Practice_id=301, region=13', source_pid = caresite$pracid,
cdm_pid = caresite$care_site_id)
library(CPRDtesting)
library(CPRDtesting)
source_schema <- "native"
cdm_schema <- "cdm_testing_ccae.dbo"
cdmDatabaseSchema = strsplit(source_schema, '[.]')[[1]][1]
port <- NULL
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = 'sql_server',
server = 'rds-epidev.c9noqp7vjybh.us-east-1.rds.amazonaws.com',
user = 'epi_rds_write',
password = '~5H8Ey~vr1K3',
port = port
)
connection <- DatabaseConnector::connect(connectionDetails)
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste(getInsertSql(connectionDetails),
sep = "", collapse = "\n"),
source_schema = source_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = 'sql server',
server = 'rds-epidev.c9noqp7vjybh.us-east-1.rds.amazonaws.com',
user = 'epi_rds_write',
password = '~5H8Ey~vr1K3',
port = port
)
connection <- DatabaseConnector::connect(connectionDetails)
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste(getInsertSql(connectionDetails),
sep = "", collapse = "\n"),
source_schema = source_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
getwd()
getInsertSql
frameworkContext$insertSql
frameworkContext$inserts
generateInsertSql()
insertSql <- SqlRender::translateSql(SqlRender::renderSql(generateInsertSql(cdm_schema))$sql,
targetDialect = connectionDetails$dbms)$sql
d <- generateInsertSql(cdm_schema)
d
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(cdm_schema), collapse='')$sql,
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(cdm_schema),
collapse=''))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
cdm_schema <- "cdm_testing_cprd.dbo"
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(cdm_schema),
collapse=''))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
cdm_schema <- "testing"
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(cdm_schema),
collapse=''))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse=''))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
source_schema <- "cdm_testing_cprd.native"
cdm_schema <- "cdm_testing_cprd.testing"
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse=''))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
source_schema <- "cdm_native_cprd"
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse=''))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
source_schema <- "native.cdm_testing_cprd"
insertSql
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse=''))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
cdm_schema <- "testing.cdm_testing_cprd"
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.therpy')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.therapy')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.commondosage')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.commondosages')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.therapy')
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse=''))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.therapy')
insertSql
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse='\n'))$sql,
targetDialect = connectionDetails$dbms)$sql
insertSql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
DatabaseConnector::querySql(connection, 'drop table native.cdm_testing_cprd.therapy')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.therapy')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.therapy')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.medical')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.commondosages')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.commondosages')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.therapy')
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse='\n'))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.dayssuppl_decodes')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.dayssupply_decodes')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.daysupply_decodes')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.daysupply_decodes')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.daysupply_decodes')
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.daysupply_decodes')
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse='\n'))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
DatabaseConnector::querySql(connection, 'select top 1 * from native.cdm_testing_cprd.daysupply_decodes')
DatabaseConnector::querySql(connection, 'select top 1 * from testing.cdm_testing_cprd.daysupply_decodes')
DatabaseConnector::querySql(connection, 'select top 1 * from testing.cdm_testing_cprd.person')
DatabaseConnector::querySql(connection, 'select top 1 * from testing.cdm_testing_cprd.location')
DatabaseConnector::querySql(connection, 'select top 1 * from testing.cdm_testing_cprd.observation')
DatabaseConnector::querySql(connection, 'select top 1 * from cdm_testing_cprd.observation')
DatabaseConnector::querySql(connection, 'select top 1 * from test.cdm_testing_cprd.observation')
DatabaseConnector::querySql(connection, 'select top 1 * from cdm.cdm_testing_cprd.observation')
DatabaseConnector::querySql(connection, 'select top 1 * from testing.cdm_testing_cprd.observation')
DatabaseConnector::getTableNames(connection, 'testing.cdm_testing_cprd')
DatabaseConnector::getTableNames(connection, 'native.cdm_testing_cprd')
DatabaseConnector::getTableNames(connection, 'test.cdm_testing_cprd')
DatabaseConnector::getTableNames(connection, 'testing.cdm_testing_cprd')
DatabaseConnector::getTableNames(connection, 'testing.cdm_testing_cprd')
DatabaseConnector::getTableNames(connection, 'testing.cdm_testing_ccae')
tables <- DatabaseConnector::getTableNames(connection, 'testing.cdm_testing_ccae')
for(table in tables){
sql <-paste0('select * into testing.cdm_testing_cprd.',table,' from testing.cdm_testing_ccae',table)
DatabaseConnector::executeSql(connection, sql)
}
tables <- DatabaseConnector::getTableNames(connection, 'testing.cdm_testing_ccae')
for(table in tables){
sql <-paste0('select * into testing.cdm_testing_cprd.',table,' from testing.cdm_testing_ccae.',table)
DatabaseConnector::executeSql(connection, sql)
}
#BUILD RAW DATA
#=============================
connection <- DatabaseConnector::connect(connectionDetails)
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', getTestSql(connectionDetails)), sep = "", collapse = "\n"),
cdm_schema = cdm_schema)$sql,
targetDialect = connectionDetails$dbms)$sql
cdm_schema <- "testing.cdm_testing_cprd"
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', generateTestSql(cdm_schema)), sep = "", collapse = "\n")
)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(testSql, 'testSql.sql')
DatabaseConnector::executeSql(connection, testSql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT status, count(*) FROM @cdm_schema.test_results group by status", cdm_schema = cdm_schema)$sql)
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
View(fails)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=12'", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=12", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.therapy where patid=12", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.therapy", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.therapy where patid = 12111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=14", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=12111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=14111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.daysupply_decodes", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.commondoses", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.commondosages", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=13111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=14111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=16111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=23111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=19111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=23111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=34111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=36111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=37111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.person where patid = 37111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.patient where patid = 37111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.patient where patid = 36111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=43111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.clinical where patid = 43111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=43111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.clinical where patid = 43111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.clinical where patid = 43", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.clinical where patid = 42111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=42111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=43111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.clinical where patid = 41111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=41111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=42111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.clinical where patid = 42111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.patient where patid = 42111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.observation_period where person_id=42111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=51111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=59111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=50111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=52111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.observation where person_id=69111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.observation where person_id=67111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.observation where person_id=68111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.observation where person_id=69111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.observation where person_id=70111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=98111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=97111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=96111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=95111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=100111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=99111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=98111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=95111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=94111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=93111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=92111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.clinical where patid = 95111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.procedure_occurrence where person_id=95111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=12111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=13111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=36111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.patient where patid = 36111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.patient where patid = 35111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=35111", cdm_schema = cdm_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.measurement where person_id=36111", cdm_schema = cdm_schema)$sql)
library(CPRDtesting)
library(CPRDtesting)
source_schema <- "native.cdm_testing_cprd"
cdm_schema <- "testing.cdm_testing_cprd"
cdmDatabaseSchema = strsplit(source_schema, '[.]')[[1]][1]
port <- NULL
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = 'sql server',
server = 'rds-epidev.c9noqp7vjybh.us-east-1.rds.amazonaws.com',
user = 'epi_rds_write',
password = '~5H8Ey~vr1K3',
port = port
)
#BUILD RAW DATA
#=============================
#tables <- DatabaseConnector::getTableNames(connection, 'testing.cdm_testing_ccae')
#for(table in tables){
#  sql <-paste0('select * into testing.cdm_testing_cprd.',table,' from testing.cdm_testing_ccae.',table)
#  DatabaseConnector::executeSql(connection, sql)
#}
connection <- DatabaseConnector::connect(connectionDetails)
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse='\n'))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
connection <- DatabaseConnector::connect(connectionDetails)
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', generateTestSql(cdm_schema)), sep = "", collapse = "\n")
)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(testSql, 'testSql.sql')
DatabaseConnector::executeSql(connection, testSql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT status, count(*) FROM @cdm_schema.test_results group by status", cdm_schema = cdm_schema)$sql)
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
View(fails)
library(CPRDtesting)
# Establish Extended Type and Connection strings
#=============================
#detach("package:CPRDTesting", unload=TRUE)
library(CPRDtesting)
source_schema <- "native.cdm_testing_cprd"
cdm_schema <- "testing.cdm_testing_cprd"
cdmDatabaseSchema = strsplit(source_schema, '[.]')[[1]][1]
port <- NULL
connectionDetails <- DatabaseConnector::createConnectionDetails(dbms = 'sql server',
server = 'rds-epidev.c9noqp7vjybh.us-east-1.rds.amazonaws.com',
user = 'epi_rds_write',
password = '~5H8Ey~vr1K3',
port = port
)
#BUILD RAW DATA
#=============================
#tables <- DatabaseConnector::getTableNames(connection, 'testing.cdm_testing_ccae')
#for(table in tables){
#  sql <-paste0('select * into testing.cdm_testing_cprd.',table,' from testing.cdm_testing_ccae.',table)
#  DatabaseConnector::executeSql(connection, sql)
#}
connection <- DatabaseConnector::connect(connectionDetails)
insertSql <- SqlRender::translateSql(SqlRender::renderSql(paste0(generateInsertSql(source_schema),
collapse='\n'))$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(insertSql, 'insertSql.sql')
DatabaseConnector::executeSql(connection, insertSql)
connection <- DatabaseConnector::connect(connectionDetails)
testSql <- SqlRender::translateSql(SqlRender::renderSql(paste(gsub('; ','', generateTestSql(cdm_schema)), sep = "", collapse = "\n")
)$sql,
targetDialect = connectionDetails$dbms)$sql
SqlRender::writeSql(testSql, 'testSql.sql')
DatabaseConnector::executeSql(connection, testSql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT status, count(*) FROM @cdm_schema.test_results group by status", cdm_schema = cdm_schema)$sql)
fails <- DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.test_results where status = 'FAIL'", cdm_schema = cdm_schema)$sql)
View(fails)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.therapy where patid = 13111", cdm_schema = source_schema)$sql)
DatabaseConnector::querySql(connection, SqlRender::renderSql("SELECT * FROM @cdm_schema.drug_exposure where person_id=13111", cdm_schema = cdm_schema)$sql)
library(CPRDtesting)
