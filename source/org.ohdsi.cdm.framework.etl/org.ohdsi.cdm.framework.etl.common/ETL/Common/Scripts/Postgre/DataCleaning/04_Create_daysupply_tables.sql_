-- daysupply_modes

CREATE TABLE IF NOT EXISTS {sc}.daysupply_modes
(
    id 			BIGSERIAL 		NOT NULL,
    prodcode 	integer 		NOT NULL,
    numdays 	smallint		NOT NULL
);

With a as(
	select prodcode, numdays, count(patid) as daycount 
	from source.therapy 
	where (numdays > 0 and numdays <=365) and prodcode>1 
	group by prodcode, numdays	
	
), b as(
	select a.prodcode, a.numdays, a.daycount, ROW_NUMBER() 
	over (partition by a.prodcode order by a.prodcode, a.daycount desc) AS RowNumber
	from a
)
insert into {sc}.daysupply_modes (prodcode,numdays)
select prodcode, numdays as dayssupply 
from b 
where RowNumber=1;

ALTER TABLE {sc}.daysupply_modes add constraint pk_daysupply_modes primary key (id);
CREATE INDEX IF NOT EXISTS idx_daysupply_modes_prodcode ON {sc}.daysupply_modes USING btree (prodcode);


-- DAYSUPPLY_DECODES
CREATE TABLE IF NOT EXISTS {sc}.daysupply_decodes
(
    id 			BIGSERIAL 		NOT NULL,
    prodcode 	integer 		NOT NULL,
    daily_dose 	numeric(15,3) 	NOT NULL,
    qty 		numeric(9,2)	NOT NULL,
    numpacks 	integer 		NOT NULL,
    numdays 	smallint 		NOT NULL
);

With a AS(
	select 	prodcode, 
			case 
				when c.daily_dose is null then 0 
				else c.daily_dose 
			end as daily_dose, 
			case 
				when qty is null then 0 
				else qty 
			end as qty, 
			case 
				when numpacks is null then 0 
				else numpacks 
			end as numpacks, 
			numdays, 
			COUNT(prodcode) as daycount 
	from {sc}.therapy t 
	left join {sc}.commondosages c on t.dosageid = c.dosageid 
	where (numdays > 0 and numdays <=365) and prodcode>1 
    group by 	prodcode, 
				case 
					when c.daily_dose is null then 0 
					else c.daily_dose 
				end, 
				case 
					when qty is null then 0 else qty 
				end, 
				case 
					when numpacks is null then 0 
					else numpacks 
				end, 
				numdays
), b AS (
	select *, ROW_NUMBER() over (partition by prodcode, daily_dose, qty, numpacks order by daycount desc) AS RowNumber 
    from a
	ORDER BY a.prodcode ASC, a.daily_dose ASC, a.qty ASC, a.numpacks ASC, a.daycount DESC, a.numdays ASC
)
insert into {sc}.daysupply_decodes (prodcode,daily_dose, qty,numpacks, numdays)
select b.prodcode, b.daily_dose, b.qty, b.numpacks, b.numdays 
from b
where RowNumber=1;

ALTER TABLE {sc}.daysupply_decodes ADD PRIMARY KEY (id);
CREATE INDEX IF NOT EXISTS daysupply_decodes_prodcode_idx ON {sc}.daysupply_decodes USING btree (prodcode);

